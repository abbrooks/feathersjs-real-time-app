$_mod.def("/debug$4.1.1/src/browser", function(require, exports, module, __filename, __dirname) { var process=require("process"); var cov_wkg30w7bl = function () {
	var path = 'browser.js',
	    hash = 'eb97af28c4c7e8153363d5b0464a7c76681c1e23',
	    Function = function () {}.constructor,
	    global = new Function('return this')(),
	    gcv = '__coverage__',
	    coverageData = {
		path: 'browser.js',
		statementMap: {
			'0': {
				start: {
					line: 7,
					column: 0
				},
				end: {
					line: 7,
					column: 18
				}
			},
			'1': {
				start: {
					line: 8,
					column: 0
				},
				end: {
					line: 8,
					column: 32
				}
			},
			'2': {
				start: {
					line: 9,
					column: 0
				},
				end: {
					line: 9,
					column: 20
				}
			},
			'3': {
				start: {
					line: 10,
					column: 0
				},
				end: {
					line: 10,
					column: 20
				}
			},
			'4': {
				start: {
					line: 11,
					column: 0
				},
				end: {
					line: 11,
					column: 30
				}
			},
			'5': {
				start: {
					line: 12,
					column: 0
				},
				end: {
					line: 12,
					column: 33
				}
			},
			'6': {
				start: {
					line: 18,
					column: 0
				},
				end: {
					line: 95,
					column: 2
				}
			},
			'7': {
				start: {
					line: 110,
					column: 1
				},
				end: {
					line: 112,
					column: 2
				}
			},
			'8': {
				start: {
					line: 111,
					column: 2
				},
				end: {
					line: 111,
					column: 14
				}
			},
			'9': {
				start: {
					line: 115,
					column: 1
				},
				end: {
					line: 117,
					column: 2
				}
			},
			'10': {
				start: {
					line: 116,
					column: 2
				},
				end: {
					line: 116,
					column: 15
				}
			},
			'11': {
				start: {
					line: 121,
					column: 1
				},
				end: {
					line: 128,
					column: 125
				}
			},
			'12': {
				start: {
					line: 138,
					column: 1
				},
				end: {
					line: 143,
					column: 43
				}
			},
			'13': {
				start: {
					line: 145,
					column: 1
				},
				end: {
					line: 147,
					column: 2
				}
			},
			'14': {
				start: {
					line: 146,
					column: 2
				},
				end: {
					line: 146,
					column: 9
				}
			},
			'15': {
				start: {
					line: 149,
					column: 11
				},
				end: {
					line: 149,
					column: 33
				}
			},
			'16': {
				start: {
					line: 150,
					column: 1
				},
				end: {
					line: 150,
					column: 40
				}
			},
			'17': {
				start: {
					line: 155,
					column: 13
				},
				end: {
					line: 155,
					column: 14
				}
			},
			'18': {
				start: {
					line: 156,
					column: 13
				},
				end: {
					line: 156,
					column: 14
				}
			},
			'19': {
				start: {
					line: 157,
					column: 1
				},
				end: {
					line: 167,
					column: 4
				}
			},
			'20': {
				start: {
					line: 158,
					column: 2
				},
				end: {
					line: 160,
					column: 3
				}
			},
			'21': {
				start: {
					line: 159,
					column: 3
				},
				end: {
					line: 159,
					column: 10
				}
			},
			'22': {
				start: {
					line: 161,
					column: 2
				},
				end: {
					line: 161,
					column: 10
				}
			},
			'23': {
				start: {
					line: 162,
					column: 2
				},
				end: {
					line: 166,
					column: 3
				}
			},
			'24': {
				start: {
					line: 165,
					column: 3
				},
				end: {
					line: 165,
					column: 17
				}
			},
			'25': {
				start: {
					line: 169,
					column: 1
				},
				end: {
					line: 169,
					column: 26
				}
			},
			'26': {
				start: {
					line: 181,
					column: 1
				},
				end: {
					line: 183,
					column: 23
				}
			},
			'27': {
				start: {
					line: 193,
					column: 1
				},
				end: {
					line: 202,
					column: 2
				}
			},
			'28': {
				start: {
					line: 194,
					column: 2
				},
				end: {
					line: 198,
					column: 3
				}
			},
			'29': {
				start: {
					line: 195,
					column: 3
				},
				end: {
					line: 195,
					column: 48
				}
			},
			'30': {
				start: {
					line: 197,
					column: 3
				},
				end: {
					line: 197,
					column: 39
				}
			},
			'31': {
				start: {
					line: 213,
					column: 1
				},
				end: {
					line: 218,
					column: 2
				}
			},
			'32': {
				start: {
					line: 214,
					column: 2
				},
				end: {
					line: 214,
					column: 39
				}
			},
			'33': {
				start: {
					line: 221,
					column: 1
				},
				end: {
					line: 223,
					column: 2
				}
			},
			'34': {
				start: {
					line: 222,
					column: 2
				},
				end: {
					line: 222,
					column: 24
				}
			},
			'35': {
				start: {
					line: 225,
					column: 1
				},
				end: {
					line: 225,
					column: 10
				}
			},
			'36': {
				start: {
					line: 240,
					column: 1
				},
				end: {
					line: 247,
					column: 2
				}
			},
			'37': {
				start: {
					line: 243,
					column: 2
				},
				end: {
					line: 243,
					column: 22
				}
			},
			'38': {
				start: {
					line: 250,
					column: 0
				},
				end: {
					line: 250,
					column: 46
				}
			},
			'39': {
				start: {
					line: 252,
					column: 21
				},
				end: {
					line: 252,
					column: 35
				}
			},
			'40': {
				start: {
					line: 258,
					column: 0
				},
				end: {
					line: 264,
					column: 2
				}
			},
			'41': {
				start: {
					line: 259,
					column: 1
				},
				end: {
					line: 263,
					column: 2
				}
			},
			'42': {
				start: {
					line: 260,
					column: 2
				},
				end: {
					line: 260,
					column: 27
				}
			},
			'43': {
				start: {
					line: 262,
					column: 2
				},
				end: {
					line: 262,
					column: 56
				}
			}
		},
		fnMap: {
			'0': {
				name: 'useColors',
				decl: {
					start: {
						line: 106,
						column: 9
					},
					end: {
						line: 106,
						column: 18
					}
				},
				loc: {
					start: {
						line: 106,
						column: 21
					},
					end: {
						line: 129,
						column: 1
					}
				},
				line: 106
			},
			'1': {
				name: 'formatArgs',
				decl: {
					start: {
						line: 137,
						column: 9
					},
					end: {
						line: 137,
						column: 19
					}
				},
				loc: {
					start: {
						line: 137,
						column: 26
					},
					end: {
						line: 170,
						column: 1
					}
				},
				line: 137
			},
			'2': {
				name: '(anonymous_2)',
				decl: {
					start: {
						line: 157,
						column: 32
					},
					end: {
						line: 157,
						column: 33
					}
				},
				loc: {
					start: {
						line: 157,
						column: 41
					},
					end: {
						line: 167,
						column: 2
					}
				},
				line: 157
			},
			'3': {
				name: 'log',
				decl: {
					start: {
						line: 178,
						column: 9
					},
					end: {
						line: 178,
						column: 12
					}
				},
				loc: {
					start: {
						line: 178,
						column: 22
					},
					end: {
						line: 184,
						column: 1
					}
				},
				line: 178
			},
			'4': {
				name: 'save',
				decl: {
					start: {
						line: 192,
						column: 9
					},
					end: {
						line: 192,
						column: 13
					}
				},
				loc: {
					start: {
						line: 192,
						column: 26
					},
					end: {
						line: 203,
						column: 1
					}
				},
				line: 192
			},
			'5': {
				name: 'load',
				decl: {
					start: {
						line: 211,
						column: 9
					},
					end: {
						line: 211,
						column: 13
					}
				},
				loc: {
					start: {
						line: 211,
						column: 16
					},
					end: {
						line: 226,
						column: 1
					}
				},
				line: 211
			},
			'6': {
				name: 'localstorage',
				decl: {
					start: {
						line: 239,
						column: 9
					},
					end: {
						line: 239,
						column: 21
					}
				},
				loc: {
					start: {
						line: 239,
						column: 24
					},
					end: {
						line: 248,
						column: 1
					}
				},
				line: 239
			},
			'7': {
				name: '(anonymous_7)',
				decl: {
					start: {
						line: 258,
						column: 15
					},
					end: {
						line: 258,
						column: 16
					}
				},
				loc: {
					start: {
						line: 258,
						column: 28
					},
					end: {
						line: 264,
						column: 1
					}
				},
				line: 258
			}
		},
		branchMap: {
			'0': {
				loc: {
					start: {
						line: 110,
						column: 1
					},
					end: {
						line: 112,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 110,
						column: 1
					},
					end: {
						line: 112,
						column: 2
					}
				}, {
					start: {
						line: 110,
						column: 1
					},
					end: {
						line: 112,
						column: 2
					}
				}],
				line: 110
			},
			'1': {
				loc: {
					start: {
						line: 110,
						column: 5
					},
					end: {
						line: 110,
						column: 117
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 110,
						column: 5
					},
					end: {
						line: 110,
						column: 34
					}
				}, {
					start: {
						line: 110,
						column: 38
					},
					end: {
						line: 110,
						column: 52
					}
				}, {
					start: {
						line: 110,
						column: 57
					},
					end: {
						line: 110,
						column: 91
					}
				}, {
					start: {
						line: 110,
						column: 95
					},
					end: {
						line: 110,
						column: 116
					}
				}],
				line: 110
			},
			'2': {
				loc: {
					start: {
						line: 115,
						column: 1
					},
					end: {
						line: 117,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 115,
						column: 1
					},
					end: {
						line: 117,
						column: 2
					}
				}, {
					start: {
						line: 115,
						column: 1
					},
					end: {
						line: 117,
						column: 2
					}
				}],
				line: 115
			},
			'3': {
				loc: {
					start: {
						line: 115,
						column: 5
					},
					end: {
						line: 115,
						column: 128
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 115,
						column: 5
					},
					end: {
						line: 115,
						column: 37
					}
				}, {
					start: {
						line: 115,
						column: 41
					},
					end: {
						line: 115,
						column: 60
					}
				}, {
					start: {
						line: 115,
						column: 64
					},
					end: {
						line: 115,
						column: 128
					}
				}],
				line: 115
			},
			'4': {
				loc: {
					start: {
						line: 121,
						column: 8
					},
					end: {
						line: 128,
						column: 124
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 121,
						column: 9
					},
					end: {
						line: 121,
						column: 40
					}
				}, {
					start: {
						line: 121,
						column: 44
					},
					end: {
						line: 121,
						column: 68
					}
				}, {
					start: {
						line: 121,
						column: 72
					},
					end: {
						line: 121,
						column: 102
					}
				}, {
					start: {
						line: 121,
						column: 106
					},
					end: {
						line: 121,
						column: 153
					}
				}, {
					start: {
						line: 123,
						column: 3
					},
					end: {
						line: 123,
						column: 32
					}
				}, {
					start: {
						line: 123,
						column: 36
					},
					end: {
						line: 123,
						column: 50
					}
				}, {
					start: {
						line: 123,
						column: 55
					},
					end: {
						line: 123,
						column: 77
					}
				}, {
					start: {
						line: 123,
						column: 82
					},
					end: {
						line: 123,
						column: 106
					}
				}, {
					start: {
						line: 123,
						column: 110
					},
					end: {
						line: 123,
						column: 130
					}
				}, {
					start: {
						line: 126,
						column: 3
					},
					end: {
						line: 126,
						column: 35
					}
				}, {
					start: {
						line: 126,
						column: 39
					},
					end: {
						line: 126,
						column: 58
					}
				}, {
					start: {
						line: 126,
						column: 62
					},
					end: {
						line: 126,
						column: 119
					}
				}, {
					start: {
						line: 126,
						column: 123
					},
					end: {
						line: 126,
						column: 152
					}
				}, {
					start: {
						line: 128,
						column: 3
					},
					end: {
						line: 128,
						column: 35
					}
				}, {
					start: {
						line: 128,
						column: 39
					},
					end: {
						line: 128,
						column: 58
					}
				}, {
					start: {
						line: 128,
						column: 62
					},
					end: {
						line: 128,
						column: 123
					}
				}],
				line: 121
			},
			'5': {
				loc: {
					start: {
						line: 138,
						column: 12
					},
					end: {
						line: 138,
						column: 38
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 138,
						column: 29
					},
					end: {
						line: 138,
						column: 33
					}
				}, {
					start: {
						line: 138,
						column: 36
					},
					end: {
						line: 138,
						column: 38
					}
				}],
				line: 138
			},
			'6': {
				loc: {
					start: {
						line: 140,
						column: 3
					},
					end: {
						line: 140,
						column: 31
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 140,
						column: 20
					},
					end: {
						line: 140,
						column: 25
					}
				}, {
					start: {
						line: 140,
						column: 28
					},
					end: {
						line: 140,
						column: 31
					}
				}],
				line: 140
			},
			'7': {
				loc: {
					start: {
						line: 142,
						column: 3
					},
					end: {
						line: 142,
						column: 31
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 142,
						column: 20
					},
					end: {
						line: 142,
						column: 25
					}
				}, {
					start: {
						line: 142,
						column: 28
					},
					end: {
						line: 142,
						column: 31
					}
				}],
				line: 142
			},
			'8': {
				loc: {
					start: {
						line: 145,
						column: 1
					},
					end: {
						line: 147,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 145,
						column: 1
					},
					end: {
						line: 147,
						column: 2
					}
				}, {
					start: {
						line: 145,
						column: 1
					},
					end: {
						line: 147,
						column: 2
					}
				}],
				line: 145
			},
			'9': {
				loc: {
					start: {
						line: 158,
						column: 2
					},
					end: {
						line: 160,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 158,
						column: 2
					},
					end: {
						line: 160,
						column: 3
					}
				}, {
					start: {
						line: 158,
						column: 2
					},
					end: {
						line: 160,
						column: 3
					}
				}],
				line: 158
			},
			'10': {
				loc: {
					start: {
						line: 162,
						column: 2
					},
					end: {
						line: 166,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 162,
						column: 2
					},
					end: {
						line: 166,
						column: 3
					}
				}, {
					start: {
						line: 162,
						column: 2
					},
					end: {
						line: 166,
						column: 3
					}
				}],
				line: 162
			},
			'11': {
				loc: {
					start: {
						line: 181,
						column: 8
					},
					end: {
						line: 183,
						column: 22
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 181,
						column: 8
					},
					end: {
						line: 181,
						column: 35
					}
				}, {
					start: {
						line: 182,
						column: 2
					},
					end: {
						line: 182,
						column: 13
					}
				}, {
					start: {
						line: 183,
						column: 2
					},
					end: {
						line: 183,
						column: 22
					}
				}],
				line: 181
			},
			'12': {
				loc: {
					start: {
						line: 194,
						column: 2
					},
					end: {
						line: 198,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 194,
						column: 2
					},
					end: {
						line: 198,
						column: 3
					}
				}, {
					start: {
						line: 194,
						column: 2
					},
					end: {
						line: 198,
						column: 3
					}
				}],
				line: 194
			},
			'13': {
				loc: {
					start: {
						line: 221,
						column: 1
					},
					end: {
						line: 223,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 221,
						column: 1
					},
					end: {
						line: 223,
						column: 2
					}
				}, {
					start: {
						line: 221,
						column: 1
					},
					end: {
						line: 223,
						column: 2
					}
				}],
				line: 221
			},
			'14': {
				loc: {
					start: {
						line: 221,
						column: 5
					},
					end: {
						line: 221,
						column: 61
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 221,
						column: 5
					},
					end: {
						line: 221,
						column: 7
					}
				}, {
					start: {
						line: 221,
						column: 11
					},
					end: {
						line: 221,
						column: 41
					}
				}, {
					start: {
						line: 221,
						column: 45
					},
					end: {
						line: 221,
						column: 61
					}
				}],
				line: 221
			}
		},
		s: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0,
			'15': 0,
			'16': 0,
			'17': 0,
			'18': 0,
			'19': 0,
			'20': 0,
			'21': 0,
			'22': 0,
			'23': 0,
			'24': 0,
			'25': 0,
			'26': 0,
			'27': 0,
			'28': 0,
			'29': 0,
			'30': 0,
			'31': 0,
			'32': 0,
			'33': 0,
			'34': 0,
			'35': 0,
			'36': 0,
			'37': 0,
			'38': 0,
			'39': 0,
			'40': 0,
			'41': 0,
			'42': 0,
			'43': 0
		},
		f: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0
		},
		b: {
			'0': [0, 0],
			'1': [0, 0, 0, 0],
			'2': [0, 0],
			'3': [0, 0, 0],
			'4': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
			'5': [0, 0],
			'6': [0, 0],
			'7': [0, 0],
			'8': [0, 0],
			'9': [0, 0],
			'10': [0, 0],
			'11': [0, 0, 0],
			'12': [0, 0],
			'13': [0, 0],
			'14': [0, 0, 0]
		},
		_coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'
	},
	    coverage = global[gcv] || (global[gcv] = {});

	if (coverage[path] && coverage[path].hash === hash) {
		return coverage[path];
	}

	coverageData.hash = hash;
	return coverage[path] = coverageData;
}();

cov_wkg30w7bl.s[0]++;
/* eslint-env browser */

/**
 * This is the web browser implementation of `debug()`.
 */

exports.log = log;
cov_wkg30w7bl.s[1]++;
exports.formatArgs = formatArgs;
cov_wkg30w7bl.s[2]++;
exports.save = save;
cov_wkg30w7bl.s[3]++;
exports.load = load;
cov_wkg30w7bl.s[4]++;
exports.useColors = useColors;
cov_wkg30w7bl.s[5]++;
exports.storage = localstorage();

/**
 * Colors.
 */

cov_wkg30w7bl.s[6]++;
exports.colors = ['#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC', '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF', '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC', '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF', '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC', '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033', '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366', '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933', '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC', '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF', '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'];

/**
 * Currently only WebKit-based Web Inspectors, Firefox >= v31,
 * and the Firebug extension (any Firefox version) are known
 * to support "%c" CSS customizations.
 *
 * TODO: add a `localStorage` variable to explicitly enable/disable colors
 */

// eslint-disable-next-line complexity
function useColors() {
	cov_wkg30w7bl.f[0]++;
	cov_wkg30w7bl.s[7]++;

	// NB: In an Electron preload script, document will be defined but not fully
	// initialized. Since we know we're in Chrome, we'll just detect this case
	// explicitly
	if ((cov_wkg30w7bl.b[1][0]++, typeof window !== 'undefined') && (cov_wkg30w7bl.b[1][1]++, window.process) && ((cov_wkg30w7bl.b[1][2]++, window.process.type === 'renderer') || (cov_wkg30w7bl.b[1][3]++, window.process.__nwjs))) {
		cov_wkg30w7bl.b[0][0]++;
		cov_wkg30w7bl.s[8]++;

		return true;
	} else {
		cov_wkg30w7bl.b[0][1]++;
	}

	// Internet Explorer and Edge do not support colors.
	cov_wkg30w7bl.s[9]++;
	if ((cov_wkg30w7bl.b[3][0]++, typeof navigator !== 'undefined') && (cov_wkg30w7bl.b[3][1]++, navigator.userAgent) && (cov_wkg30w7bl.b[3][2]++, navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/))) {
		cov_wkg30w7bl.b[2][0]++;
		cov_wkg30w7bl.s[10]++;

		return false;
	} else {
		cov_wkg30w7bl.b[2][1]++;
	}

	// Is webkit? http://stackoverflow.com/a/16459606/376773
	// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632
	cov_wkg30w7bl.s[11]++;
	return (cov_wkg30w7bl.b[4][0]++, typeof document !== 'undefined') && (cov_wkg30w7bl.b[4][1]++, document.documentElement) && (cov_wkg30w7bl.b[4][2]++, document.documentElement.style) && (cov_wkg30w7bl.b[4][3]++, document.documentElement.style.WebkitAppearance) ||
	// Is firebug? http://stackoverflow.com/a/398120/376773
	(cov_wkg30w7bl.b[4][4]++, typeof window !== 'undefined') && (cov_wkg30w7bl.b[4][5]++, window.console) && ((cov_wkg30w7bl.b[4][6]++, window.console.firebug) || (cov_wkg30w7bl.b[4][7]++, window.console.exception) && (cov_wkg30w7bl.b[4][8]++, window.console.table)) ||
	// Is firefox >= v31?
	// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
	(cov_wkg30w7bl.b[4][9]++, typeof navigator !== 'undefined') && (cov_wkg30w7bl.b[4][10]++, navigator.userAgent) && (cov_wkg30w7bl.b[4][11]++, navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)) && (cov_wkg30w7bl.b[4][12]++, parseInt(RegExp.$1, 10) >= 31) ||
	// Double check webkit in userAgent just in case we are in a worker
	(cov_wkg30w7bl.b[4][13]++, typeof navigator !== 'undefined') && (cov_wkg30w7bl.b[4][14]++, navigator.userAgent) && (cov_wkg30w7bl.b[4][15]++, navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/));
}

/**
 * Colorize log arguments if enabled.
 *
 * @api public
 */

function formatArgs(args) {
	cov_wkg30w7bl.f[1]++;
	cov_wkg30w7bl.s[12]++;

	args[0] = (this.useColors ? (cov_wkg30w7bl.b[5][0]++, '%c') : (cov_wkg30w7bl.b[5][1]++, '')) + this.namespace + (this.useColors ? (cov_wkg30w7bl.b[6][0]++, ' %c') : (cov_wkg30w7bl.b[6][1]++, ' ')) + args[0] + (this.useColors ? (cov_wkg30w7bl.b[7][0]++, '%c ') : (cov_wkg30w7bl.b[7][1]++, ' ')) + '+' + module.exports.humanize(this.diff);

	cov_wkg30w7bl.s[13]++;
	if (!this.useColors) {
		cov_wkg30w7bl.b[8][0]++;
		cov_wkg30w7bl.s[14]++;

		return;
	} else {
		cov_wkg30w7bl.b[8][1]++;
	}

	const c = (cov_wkg30w7bl.s[15]++, 'color: ' + this.color);
	cov_wkg30w7bl.s[16]++;
	args.splice(1, 0, c, 'color: inherit');

	// The final "%c" is somewhat tricky, because there could be other
	// arguments passed either before or after the %c, so we need to
	// figure out the correct index to insert the CSS into
	let index = (cov_wkg30w7bl.s[17]++, 0);
	let lastC = (cov_wkg30w7bl.s[18]++, 0);
	cov_wkg30w7bl.s[19]++;
	args[0].replace(/%[a-zA-Z%]/g, match => {
		cov_wkg30w7bl.f[2]++;
		cov_wkg30w7bl.s[20]++;

		if (match === '%%') {
			cov_wkg30w7bl.b[9][0]++;
			cov_wkg30w7bl.s[21]++;

			return;
		} else {
			cov_wkg30w7bl.b[9][1]++;
		}
		cov_wkg30w7bl.s[22]++;
		index++;
		cov_wkg30w7bl.s[23]++;
		if (match === '%c') {
			cov_wkg30w7bl.b[10][0]++;
			cov_wkg30w7bl.s[24]++;

			// We only are interested in the *last* %c
			// (the user may have provided their own)
			lastC = index;
		} else {
			cov_wkg30w7bl.b[10][1]++;
		}
	});

	cov_wkg30w7bl.s[25]++;
	args.splice(lastC, 0, c);
}

/**
 * Invokes `console.log()` when available.
 * No-op when `console.log` is not a "function".
 *
 * @api public
 */
function log(...args) {
	cov_wkg30w7bl.f[3]++;
	cov_wkg30w7bl.s[26]++;

	// This hackery is required for IE8/9, where
	// the `console.log` function doesn't have 'apply'
	return (cov_wkg30w7bl.b[11][0]++, typeof console === 'object') && (cov_wkg30w7bl.b[11][1]++, console.log) && (cov_wkg30w7bl.b[11][2]++, console.log(...args));
}

/**
 * Save `namespaces`.
 *
 * @param {String} namespaces
 * @api private
 */
function save(namespaces) {
	cov_wkg30w7bl.f[4]++;
	cov_wkg30w7bl.s[27]++;

	try {
		cov_wkg30w7bl.s[28]++;

		if (namespaces) {
			cov_wkg30w7bl.b[12][0]++;
			cov_wkg30w7bl.s[29]++;

			exports.storage.setItem('debug', namespaces);
		} else {
			cov_wkg30w7bl.b[12][1]++;
			cov_wkg30w7bl.s[30]++;

			exports.storage.removeItem('debug');
		}
	} catch (error) {
		// Swallow
		// XXX (@Qix-) should we be logging these?
	}
}

/**
 * Load `namespaces`.
 *
 * @return {String} returns the previously persisted debug modes
 * @api private
 */
function load() {
	cov_wkg30w7bl.f[5]++;

	let r;
	cov_wkg30w7bl.s[31]++;
	try {
		cov_wkg30w7bl.s[32]++;

		r = exports.storage.getItem('debug');
	} catch (error) {}
	// Swallow
	// XXX (@Qix-) should we be logging these?


	// If debug isn't set in LS, and we're in Electron, try to load $DEBUG
	cov_wkg30w7bl.s[33]++;
	if ((cov_wkg30w7bl.b[14][0]++, !r) && (cov_wkg30w7bl.b[14][1]++, typeof process !== 'undefined') && (cov_wkg30w7bl.b[14][2]++, 'env' in process)) {
		cov_wkg30w7bl.b[13][0]++;
		cov_wkg30w7bl.s[34]++;

		r = process.env.DEBUG;
	} else {
		cov_wkg30w7bl.b[13][1]++;
	}

	cov_wkg30w7bl.s[35]++;
	return r;
}

/**
 * Localstorage attempts to return the localstorage.
 *
 * This is necessary because safari throws
 * when a user disables cookies/localstorage
 * and you attempt to access it.
 *
 * @return {LocalStorage}
 * @api private
 */

function localstorage() {
	cov_wkg30w7bl.f[6]++;
	cov_wkg30w7bl.s[36]++;

	try {
		cov_wkg30w7bl.s[37]++;

		// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context
		// The Browser also has localStorage in the global context.
		return localStorage;
	} catch (error) {
		// Swallow
		// XXX (@Qix-) should we be logging these?
	}
}

cov_wkg30w7bl.s[38]++;
module.exports = require('/debug$4.1.1/src/common'/*'./common'*/)(exports);

const { formatters } = (cov_wkg30w7bl.s[39]++, module.exports);

/**
 * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.
 */

cov_wkg30w7bl.s[40]++;
formatters.j = function (v) {
	cov_wkg30w7bl.f[7]++;
	cov_wkg30w7bl.s[41]++;

	try {
		cov_wkg30w7bl.s[42]++;

		return JSON.stringify(v);
	} catch (error) {
		cov_wkg30w7bl.s[43]++;

		return '[UnexpectedJSONParseError]: ' + error.message;
	}
};
});