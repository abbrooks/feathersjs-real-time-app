$_mod.def("/object-assign$4.1.1/index", function(require, exports, module, __filename, __dirname) { /*
object-assign
(c) Sindre Sorhus
@license MIT
*/

'use strict';
/* eslint-disable no-unused-vars */

var cov_w3vwktd8z = function () {
	var path = '/Users/daffl/Development/feathersjs/feathers/packages/client/index.js',
	    hash = '0ae94be1724e6356f9a970c06d0b78b223613b0d',
	    Function = function () {}.constructor,
	    global = new Function('return this')(),
	    gcv = '__coverage__',
	    coverageData = {
		path: '/Users/daffl/Development/feathersjs/feathers/packages/client/index.js',
		statementMap: {
			'0': {
				start: {
					line: 9,
					column: 28
				},
				end: {
					line: 9,
					column: 56
				}
			},
			'1': {
				start: {
					line: 10,
					column: 21
				},
				end: {
					line: 10,
					column: 52
				}
			},
			'2': {
				start: {
					line: 11,
					column: 23
				},
				end: {
					line: 11,
					column: 60
				}
			},
			'3': {
				start: {
					line: 14,
					column: 1
				},
				end: {
					line: 16,
					column: 2
				}
			},
			'4': {
				start: {
					line: 15,
					column: 2
				},
				end: {
					line: 15,
					column: 79
				}
			},
			'5': {
				start: {
					line: 18,
					column: 1
				},
				end: {
					line: 18,
					column: 20
				}
			},
			'6': {
				start: {
					line: 22,
					column: 1
				},
				end: {
					line: 62,
					column: 2
				}
			},
			'7': {
				start: {
					line: 23,
					column: 2
				},
				end: {
					line: 25,
					column: 3
				}
			},
			'8': {
				start: {
					line: 24,
					column: 3
				},
				end: {
					line: 24,
					column: 16
				}
			},
			'9': {
				start: {
					line: 30,
					column: 14
				},
				end: {
					line: 30,
					column: 31
				}
			},
			'10': {
				start: {
					line: 31,
					column: 2
				},
				end: {
					line: 31,
					column: 18
				}
			},
			'11': {
				start: {
					line: 32,
					column: 2
				},
				end: {
					line: 34,
					column: 3
				}
			},
			'12': {
				start: {
					line: 33,
					column: 3
				},
				end: {
					line: 33,
					column: 16
				}
			},
			'13': {
				start: {
					line: 37,
					column: 14
				},
				end: {
					line: 37,
					column: 16
				}
			},
			'14': {
				start: {
					line: 38,
					column: 2
				},
				end: {
					line: 40,
					column: 3
				}
			},
			'15': {
				start: {
					line: 39,
					column: 3
				},
				end: {
					line: 39,
					column: 43
				}
			},
			'16': {
				start: {
					line: 41,
					column: 15
				},
				end: {
					line: 43,
					column: 4
				}
			},
			'17': {
				start: {
					line: 42,
					column: 3
				},
				end: {
					line: 42,
					column: 19
				}
			},
			'18': {
				start: {
					line: 44,
					column: 2
				},
				end: {
					line: 46,
					column: 3
				}
			},
			'19': {
				start: {
					line: 45,
					column: 3
				},
				end: {
					line: 45,
					column: 16
				}
			},
			'20': {
				start: {
					line: 49,
					column: 14
				},
				end: {
					line: 49,
					column: 16
				}
			},
			'21': {
				start: {
					line: 50,
					column: 2
				},
				end: {
					line: 52,
					column: 5
				}
			},
			'22': {
				start: {
					line: 51,
					column: 3
				},
				end: {
					line: 51,
					column: 26
				}
			},
			'23': {
				start: {
					line: 53,
					column: 2
				},
				end: {
					line: 56,
					column: 3
				}
			},
			'24': {
				start: {
					line: 55,
					column: 3
				},
				end: {
					line: 55,
					column: 16
				}
			},
			'25': {
				start: {
					line: 58,
					column: 2
				},
				end: {
					line: 58,
					column: 14
				}
			},
			'26': {
				start: {
					line: 61,
					column: 2
				},
				end: {
					line: 61,
					column: 15
				}
			},
			'27': {
				start: {
					line: 65,
					column: 0
				},
				end: {
					line: 90,
					column: 2
				}
			},
			'28': {
				start: {
					line: 67,
					column: 10
				},
				end: {
					line: 67,
					column: 26
				}
			},
			'29': {
				start: {
					line: 70,
					column: 1
				},
				end: {
					line: 87,
					column: 2
				}
			},
			'30': {
				start: {
					line: 71,
					column: 2
				},
				end: {
					line: 71,
					column: 30
				}
			},
			'31': {
				start: {
					line: 73,
					column: 2
				},
				end: {
					line: 77,
					column: 3
				}
			},
			'32': {
				start: {
					line: 74,
					column: 3
				},
				end: {
					line: 76,
					column: 4
				}
			},
			'33': {
				start: {
					line: 75,
					column: 4
				},
				end: {
					line: 75,
					column: 24
				}
			},
			'34': {
				start: {
					line: 79,
					column: 2
				},
				end: {
					line: 86,
					column: 3
				}
			},
			'35': {
				start: {
					line: 80,
					column: 3
				},
				end: {
					line: 80,
					column: 41
				}
			},
			'36': {
				start: {
					line: 81,
					column: 3
				},
				end: {
					line: 85,
					column: 4
				}
			},
			'37': {
				start: {
					line: 82,
					column: 4
				},
				end: {
					line: 84,
					column: 5
				}
			},
			'38': {
				start: {
					line: 83,
					column: 5
				},
				end: {
					line: 83,
					column: 39
				}
			},
			'39': {
				start: {
					line: 89,
					column: 1
				},
				end: {
					line: 89,
					column: 11
				}
			}
		},
		fnMap: {
			'0': {
				name: 'toObject',
				decl: {
					start: {
						line: 13,
						column: 9
					},
					end: {
						line: 13,
						column: 17
					}
				},
				loc: {
					start: {
						line: 13,
						column: 23
					},
					end: {
						line: 19,
						column: 1
					}
				},
				line: 13
			},
			'1': {
				name: 'shouldUseNative',
				decl: {
					start: {
						line: 21,
						column: 9
					},
					end: {
						line: 21,
						column: 24
					}
				},
				loc: {
					start: {
						line: 21,
						column: 27
					},
					end: {
						line: 63,
						column: 1
					}
				},
				line: 21
			},
			'2': {
				name: '(anonymous_2)',
				decl: {
					start: {
						line: 41,
						column: 53
					},
					end: {
						line: 41,
						column: 54
					}
				},
				loc: {
					start: {
						line: 41,
						column: 66
					},
					end: {
						line: 43,
						column: 3
					}
				},
				line: 41
			},
			'3': {
				name: '(anonymous_3)',
				decl: {
					start: {
						line: 50,
						column: 43
					},
					end: {
						line: 50,
						column: 44
					}
				},
				loc: {
					start: {
						line: 50,
						column: 61
					},
					end: {
						line: 52,
						column: 3
					}
				},
				line: 50
			},
			'4': {
				name: '(anonymous_4)',
				decl: {
					start: {
						line: 65,
						column: 53
					},
					end: {
						line: 65,
						column: 54
					}
				},
				loc: {
					start: {
						line: 65,
						column: 79
					},
					end: {
						line: 90,
						column: 1
					}
				},
				line: 65
			}
		},
		branchMap: {
			'0': {
				loc: {
					start: {
						line: 14,
						column: 1
					},
					end: {
						line: 16,
						column: 2
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 14,
						column: 1
					},
					end: {
						line: 16,
						column: 2
					}
				}, {
					start: {
						line: 14,
						column: 1
					},
					end: {
						line: 16,
						column: 2
					}
				}],
				line: 14
			},
			'1': {
				loc: {
					start: {
						line: 14,
						column: 5
					},
					end: {
						line: 14,
						column: 38
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 14,
						column: 5
					},
					end: {
						line: 14,
						column: 17
					}
				}, {
					start: {
						line: 14,
						column: 21
					},
					end: {
						line: 14,
						column: 38
					}
				}],
				line: 14
			},
			'2': {
				loc: {
					start: {
						line: 23,
						column: 2
					},
					end: {
						line: 25,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 23,
						column: 2
					},
					end: {
						line: 25,
						column: 3
					}
				}, {
					start: {
						line: 23,
						column: 2
					},
					end: {
						line: 25,
						column: 3
					}
				}],
				line: 23
			},
			'3': {
				loc: {
					start: {
						line: 32,
						column: 2
					},
					end: {
						line: 34,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 32,
						column: 2
					},
					end: {
						line: 34,
						column: 3
					}
				}, {
					start: {
						line: 32,
						column: 2
					},
					end: {
						line: 34,
						column: 3
					}
				}],
				line: 32
			},
			'4': {
				loc: {
					start: {
						line: 44,
						column: 2
					},
					end: {
						line: 46,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 44,
						column: 2
					},
					end: {
						line: 46,
						column: 3
					}
				}, {
					start: {
						line: 44,
						column: 2
					},
					end: {
						line: 46,
						column: 3
					}
				}],
				line: 44
			},
			'5': {
				loc: {
					start: {
						line: 53,
						column: 2
					},
					end: {
						line: 56,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 53,
						column: 2
					},
					end: {
						line: 56,
						column: 3
					}
				}, {
					start: {
						line: 53,
						column: 2
					},
					end: {
						line: 56,
						column: 3
					}
				}],
				line: 53
			},
			'6': {
				loc: {
					start: {
						line: 65,
						column: 17
					},
					end: {
						line: 90,
						column: 1
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 65,
						column: 37
					},
					end: {
						line: 65,
						column: 50
					}
				}, {
					start: {
						line: 65,
						column: 53
					},
					end: {
						line: 90,
						column: 1
					}
				}],
				line: 65
			},
			'7': {
				loc: {
					start: {
						line: 74,
						column: 3
					},
					end: {
						line: 76,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 74,
						column: 3
					},
					end: {
						line: 76,
						column: 4
					}
				}, {
					start: {
						line: 74,
						column: 3
					},
					end: {
						line: 76,
						column: 4
					}
				}],
				line: 74
			},
			'8': {
				loc: {
					start: {
						line: 79,
						column: 2
					},
					end: {
						line: 86,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 79,
						column: 2
					},
					end: {
						line: 86,
						column: 3
					}
				}, {
					start: {
						line: 79,
						column: 2
					},
					end: {
						line: 86,
						column: 3
					}
				}],
				line: 79
			},
			'9': {
				loc: {
					start: {
						line: 82,
						column: 4
					},
					end: {
						line: 84,
						column: 5
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 82,
						column: 4
					},
					end: {
						line: 84,
						column: 5
					}
				}, {
					start: {
						line: 82,
						column: 4
					},
					end: {
						line: 84,
						column: 5
					}
				}],
				line: 82
			}
		},
		s: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0,
			'15': 0,
			'16': 0,
			'17': 0,
			'18': 0,
			'19': 0,
			'20': 0,
			'21': 0,
			'22': 0,
			'23': 0,
			'24': 0,
			'25': 0,
			'26': 0,
			'27': 0,
			'28': 0,
			'29': 0,
			'30': 0,
			'31': 0,
			'32': 0,
			'33': 0,
			'34': 0,
			'35': 0,
			'36': 0,
			'37': 0,
			'38': 0,
			'39': 0
		},
		f: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0
		},
		b: {
			'0': [0, 0],
			'1': [0, 0],
			'2': [0, 0],
			'3': [0, 0],
			'4': [0, 0],
			'5': [0, 0],
			'6': [0, 0],
			'7': [0, 0],
			'8': [0, 0],
			'9': [0, 0]
		},
		_coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'
	},
	    coverage = global[gcv] || (global[gcv] = {});

	if (coverage[path] && coverage[path].hash === hash) {
		return coverage[path];
	}

	coverageData.hash = hash;
	return coverage[path] = coverageData;
}();

var getOwnPropertySymbols = (cov_w3vwktd8z.s[0]++, Object.getOwnPropertySymbols);
var hasOwnProperty = (cov_w3vwktd8z.s[1]++, Object.prototype.hasOwnProperty);
var propIsEnumerable = (cov_w3vwktd8z.s[2]++, Object.prototype.propertyIsEnumerable);

function toObject(val) {
	cov_w3vwktd8z.f[0]++;
	cov_w3vwktd8z.s[3]++;

	if ((cov_w3vwktd8z.b[1][0]++, val === null) || (cov_w3vwktd8z.b[1][1]++, val === undefined)) {
		cov_w3vwktd8z.b[0][0]++;
		cov_w3vwktd8z.s[4]++;

		throw new TypeError('Object.assign cannot be called with null or undefined');
	} else {
		cov_w3vwktd8z.b[0][1]++;
	}

	cov_w3vwktd8z.s[5]++;
	return Object(val);
}

function shouldUseNative() {
	cov_w3vwktd8z.f[1]++;
	cov_w3vwktd8z.s[6]++;

	try {
		cov_w3vwktd8z.s[7]++;

		if (!Object.assign) {
			cov_w3vwktd8z.b[2][0]++;
			cov_w3vwktd8z.s[8]++;

			return false;
		} else {
			cov_w3vwktd8z.b[2][1]++;
		}

		// Detect buggy property enumeration order in older V8 versions.

		// https://bugs.chromium.org/p/v8/issues/detail?id=4118
		var test1 = (cov_w3vwktd8z.s[9]++, new String('abc')); // eslint-disable-line no-new-wrappers
		cov_w3vwktd8z.s[10]++;
		test1[5] = 'de';
		cov_w3vwktd8z.s[11]++;
		if (Object.getOwnPropertyNames(test1)[0] === '5') {
			cov_w3vwktd8z.b[3][0]++;
			cov_w3vwktd8z.s[12]++;

			return false;
		} else {
			cov_w3vwktd8z.b[3][1]++;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test2 = (cov_w3vwktd8z.s[13]++, {});
		cov_w3vwktd8z.s[14]++;
		for (var i = 0; i < 10; i++) {
			cov_w3vwktd8z.s[15]++;

			test2['_' + String.fromCharCode(i)] = i;
		}
		var order2 = (cov_w3vwktd8z.s[16]++, Object.getOwnPropertyNames(test2).map(function (n) {
			cov_w3vwktd8z.f[2]++;
			cov_w3vwktd8z.s[17]++;

			return test2[n];
		}));
		cov_w3vwktd8z.s[18]++;
		if (order2.join('') !== '0123456789') {
			cov_w3vwktd8z.b[4][0]++;
			cov_w3vwktd8z.s[19]++;

			return false;
		} else {
			cov_w3vwktd8z.b[4][1]++;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test3 = (cov_w3vwktd8z.s[20]++, {});
		cov_w3vwktd8z.s[21]++;
		'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
			cov_w3vwktd8z.f[3]++;
			cov_w3vwktd8z.s[22]++;

			test3[letter] = letter;
		});
		cov_w3vwktd8z.s[23]++;
		if (Object.keys(Object.assign({}, test3)).join('') !== 'abcdefghijklmnopqrst') {
			cov_w3vwktd8z.b[5][0]++;
			cov_w3vwktd8z.s[24]++;

			return false;
		} else {
			cov_w3vwktd8z.b[5][1]++;
		}

		cov_w3vwktd8z.s[25]++;
		return true;
	} catch (err) {
		cov_w3vwktd8z.s[26]++;

		// We don't expect any of the above to throw, but better to be safe.
		return false;
	}
}

cov_w3vwktd8z.s[27]++;
module.exports = shouldUseNative() ? (cov_w3vwktd8z.b[6][0]++, Object.assign) : (cov_w3vwktd8z.b[6][1]++, function (target, source) {
	cov_w3vwktd8z.f[4]++;

	var from;
	var to = (cov_w3vwktd8z.s[28]++, toObject(target));
	var symbols;

	cov_w3vwktd8z.s[29]++;
	for (var s = 1; s < arguments.length; s++) {
		cov_w3vwktd8z.s[30]++;

		from = Object(arguments[s]);

		cov_w3vwktd8z.s[31]++;
		for (var key in from) {
			cov_w3vwktd8z.s[32]++;

			if (hasOwnProperty.call(from, key)) {
				cov_w3vwktd8z.b[7][0]++;
				cov_w3vwktd8z.s[33]++;

				to[key] = from[key];
			} else {
				cov_w3vwktd8z.b[7][1]++;
			}
		}

		cov_w3vwktd8z.s[34]++;
		if (getOwnPropertySymbols) {
			cov_w3vwktd8z.b[8][0]++;
			cov_w3vwktd8z.s[35]++;

			symbols = getOwnPropertySymbols(from);
			cov_w3vwktd8z.s[36]++;
			for (var i = 0; i < symbols.length; i++) {
				cov_w3vwktd8z.s[37]++;

				if (propIsEnumerable.call(from, symbols[i])) {
					cov_w3vwktd8z.b[9][0]++;
					cov_w3vwktd8z.s[38]++;

					to[symbols[i]] = from[symbols[i]];
				} else {
					cov_w3vwktd8z.b[9][1]++;
				}
			}
		} else {
			cov_w3vwktd8z.b[8][1]++;
		}
	}

	cov_w3vwktd8z.s[39]++;
	return to;
});
});