$_mod.def("/@feathersjs/commons$4.0.0/lib/hooks", function(require, exports, module, __filename, __dirname) { var cov_2rhh3f696k = function () {
  var path = 'hooks.js',
      hash = '4d08d0e1a1f7e095eac8a9d980898cf00280e51b',
      Function = function () {}.constructor,
      global = new Function('return this')(),
      gcv = '__coverage__',
      coverageData = {
    path: 'hooks.js',
    statementMap: {
      '0': {
        start: {
          line: 1,
          column: 44
        },
        end: {
          line: 1,
          column: 62
        }
      },
      '1': {
        start: {
          line: 4,
          column: 13
        },
        end: {
          line: 4,
          column: 48
        }
      },
      '2': {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 20
        }
      },
      '3': {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 7,
          column: 65
        }
      },
      '4': {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 33,
          column: 2
        }
      },
      '5': {
        start: {
          line: 10,
          column: 15
        },
        end: {
          line: 10,
          column: 17
        }
      },
      '6': {
        start: {
          line: 12,
          column: 2
        },
        end: {
          line: 17,
          column: 5
        }
      },
      '7': {
        start: {
          line: 14,
          column: 6
        },
        end: {
          line: 15,
          column: 51
        }
      },
      '8': {
        start: {
          line: 19,
          column: 2
        },
        end: {
          line: 32,
          column: 5
        }
      },
      '9': {
        start: {
          line: 23,
          column: 31
        },
        end: {
          line: 23,
          column: 35
        }
      },
      '10': {
        start: {
          line: 25,
          column: 6
        },
        end: {
          line: 27,
          column: 7
        }
      },
      '11': {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 20
        }
      },
      '12': {
        start: {
          line: 29,
          column: 6
        },
        end: {
          line: 30,
          column: 54
        }
      },
      '13': {
        start: {
          line: 30,
          column: 22
        },
        end: {
          line: 30,
          column: 52
        }
      },
      '14': {
        start: {
          line: 36,
          column: 0
        },
        end: {
          line: 50,
          column: 2
        }
      },
      '15': {
        start: {
          line: 37,
          column: 17
        },
        end: {
          line: 37,
          column: 19
        }
      },
      '16': {
        start: {
          line: 39,
          column: 2
        },
        end: {
          line: 41,
          column: 3
        }
      },
      '17': {
        start: {
          line: 40,
          column: 4
        },
        end: {
          line: 40,
          column: 25
        }
      },
      '18': {
        start: {
          line: 43,
          column: 2
        },
        end: {
          line: 45,
          column: 3
        }
      },
      '19': {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 44,
          column: 27
        }
      },
      '20': {
        start: {
          line: 47,
          column: 2
        },
        end: {
          line: 47,
          column: 33
        }
      },
      '21': {
        start: {
          line: 49,
          column: 2
        },
        end: {
          line: 49,
          column: 16
        }
      },
      '22': {
        start: {
          line: 54,
          column: 0
        },
        end: {
          line: 69,
          column: 2
        }
      },
      '23': {
        start: {
          line: 55,
          column: 2
        },
        end: {
          line: 66,
          column: 3
        }
      },
      '24': {
        start: {
          line: 57,
          column: 6
        },
        end: {
          line: 57,
          column: 29
        }
      },
      '25': {
        start: {
          line: 60,
          column: 6
        },
        end: {
          line: 60,
          column: 38
        }
      },
      '26': {
        start: {
          line: 63,
          column: 6
        },
        end: {
          line: 63,
          column: 49
        }
      },
      '27': {
        start: {
          line: 65,
          column: 6
        },
        end: {
          line: 65,
          column: 40
        }
      },
      '28': {
        start: {
          line: 68,
          column: 2
        },
        end: {
          line: 68,
          column: 44
        }
      },
      '29': {
        start: {
          line: 73,
          column: 0
        },
        end: {
          line: 87,
          column: 2
        }
      },
      '30': {
        start: {
          line: 74,
          column: 13
        },
        end: {
          line: 74,
          column: 15
        }
      },
      '31': {
        start: {
          line: 76,
          column: 2
        },
        end: {
          line: 84,
          column: 3
        }
      },
      '32': {
        start: {
          line: 77,
          column: 4
        },
        end: {
          line: 77,
          column: 24
        }
      },
      '33': {
        start: {
          line: 78,
          column: 9
        },
        end: {
          line: 84,
          column: 3
        }
      },
      '34': {
        start: {
          line: 79,
          column: 4
        },
        end: {
          line: 79,
          column: 28
        }
      },
      '35': {
        start: {
          line: 81,
          column: 4
        },
        end: {
          line: 83,
          column: 7
        }
      },
      '36': {
        start: {
          line: 82,
          column: 6
        },
        end: {
          line: 82,
          column: 60
        }
      },
      '37': {
        start: {
          line: 86,
          column: 2
        },
        end: {
          line: 86,
          column: 14
        }
      },
      '38': {
        start: {
          line: 91,
          column: 0
        },
        end: {
          line: 95,
          column: 2
        }
      },
      '39': {
        start: {
          line: 92,
          column: 2
        },
        end: {
          line: 94,
          column: 40
        }
      },
      '40': {
        start: {
          line: 100,
          column: 0
        },
        end: {
          line: 110,
          column: 2
        }
      },
      '41': {
        start: {
          line: 101,
          column: 19
        },
        end: {
          line: 101,
          column: 50
        }
      },
      '42': {
        start: {
          line: 102,
          column: 23
        },
        end: {
          line: 102,
          column: 58
        }
      },
      '43': {
        start: {
          line: 104,
          column: 2
        },
        end: {
          line: 107,
          column: 3
        }
      },
      '44': {
        start: {
          line: 106,
          column: 4
        },
        end: {
          line: 106,
          column: 41
        }
      },
      '45': {
        start: {
          line: 109,
          column: 2
        },
        end: {
          line: 109,
          column: 39
        }
      },
      '46': {
        start: {
          line: 112,
          column: 0
        },
        end: {
          line: 154,
          column: 2
        }
      },
      '47': {
        start: {
          line: 113,
          column: 19
        },
        end: {
          line: 113,
          column: 36
        }
      },
      '48': {
        start: {
          line: 114,
          column: 26
        },
        end: {
          line: 130,
          column: 3
        }
      },
      '49': {
        start: {
          line: 117,
          column: 4
        },
        end: {
          line: 127,
          column: 5
        }
      },
      '50': {
        start: {
          line: 118,
          column: 6
        },
        end: {
          line: 120,
          column: 7
        }
      },
      '51': {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 119,
          column: 20
        }
      },
      '52': {
        start: {
          line: 122,
          column: 6
        },
        end: {
          line: 124,
          column: 7
        }
      },
      '53': {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 123,
          column: 114
        }
      },
      '54': {
        start: {
          line: 126,
          column: 6
        },
        end: {
          line: 126,
          column: 27
        }
      },
      '55': {
        start: {
          line: 129,
          column: 4
        },
        end: {
          line: 129,
          column: 22
        }
      },
      '56': {
        start: {
          line: 132,
          column: 18
        },
        end: {
          line: 147,
          column: 33
        }
      },
      '57': {
        start: {
          line: 133,
          column: 17
        },
        end: {
          line: 133,
          column: 30
        }
      },
      '58': {
        start: {
          line: 135,
          column: 4
        },
        end: {
          line: 143,
          column: 5
        }
      },
      '59': {
        start: {
          line: 136,
          column: 6
        },
        end: {
          line: 140,
          column: 10
        }
      },
      '60': {
        start: {
          line: 136,
          column: 43
        },
        end: {
          line: 140,
          column: 8
        }
      },
      '61': {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 139,
          column: 10
        }
      },
      '62': {
        start: {
          line: 138,
          column: 10
        },
        end: {
          line: 138,
          column: 49
        }
      },
      '63': {
        start: {
          line: 142,
          column: 6
        },
        end: {
          line: 142,
          column: 90
        }
      },
      '64': {
        start: {
          line: 142,
          column: 43
        },
        end: {
          line: 142,
          column: 88
        }
      },
      '65': {
        start: {
          line: 146,
          column: 4
        },
        end: {
          line: 146,
          column: 43
        }
      },
      '66': {
        start: {
          line: 149,
          column: 2
        },
        end: {
          line: 153,
          column: 5
        }
      },
      '67': {
        start: {
          line: 149,
          column: 28
        },
        end: {
          line: 149,
          column: 38
        }
      },
      '68': {
        start: {
          line: 151,
          column: 4
        },
        end: {
          line: 151,
          column: 28
        }
      },
      '69': {
        start: {
          line: 152,
          column: 4
        },
        end: {
          line: 152,
          column: 16
        }
      },
      '70': {
        start: {
          line: 157,
          column: 0
        },
        end: {
          line: 206,
          column: 2
        }
      },
      '71': {
        start: {
          line: 158,
          column: 2
        },
        end: {
          line: 160,
          column: 3
        }
      },
      '72': {
        start: {
          line: 159,
          column: 4
        },
        end: {
          line: 159,
          column: 15
        }
      },
      '73': {
        start: {
          line: 162,
          column: 18
        },
        end: {
          line: 162,
          column: 20
        }
      },
      '74': {
        start: {
          line: 164,
          column: 2
        },
        end: {
          line: 167,
          column: 5
        }
      },
      '75': {
        start: {
          line: 166,
          column: 4
        },
        end: {
          line: 166,
          column: 23
        }
      },
      '76': {
        start: {
          line: 170,
          column: 2
        },
        end: {
          line: 172,
          column: 5
        }
      },
      '77': {
        start: {
          line: 174,
          column: 2
        },
        end: {
          line: 205,
          column: 5
        }
      },
      '78': {
        start: {
          line: 176,
          column: 6
        },
        end: {
          line: 201,
          column: 9
        }
      },
      '79': {
        start: {
          line: 177,
          column: 8
        },
        end: {
          line: 179,
          column: 9
        }
      },
      '80': {
        start: {
          line: 178,
          column: 10
        },
        end: {
          line: 178,
          column: 64
        }
      },
      '81': {
        start: {
          line: 181,
          column: 22
        },
        end: {
          line: 181,
          column: 50
        }
      },
      '82': {
        start: {
          line: 183,
          column: 8
        },
        end: {
          line: 187,
          column: 11
        }
      },
      '83': {
        start: {
          line: 184,
          column: 10
        },
        end: {
          line: 186,
          column: 11
        }
      },
      '84': {
        start: {
          line: 185,
          column: 12
        },
        end: {
          line: 185,
          column: 70
        }
      },
      '85': {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 200,
          column: 11
        }
      },
      '86': {
        start: {
          line: 190,
          column: 26
        },
        end: {
          line: 191,
          column: 45
        }
      },
      '87': {
        start: {
          line: 193,
          column: 10
        },
        end: {
          line: 195,
          column: 11
        }
      },
      '88': {
        start: {
          line: 194,
          column: 12
        },
        end: {
          line: 194,
          column: 51
        }
      },
      '89': {
        start: {
          line: 197,
          column: 10
        },
        end: {
          line: 199,
          column: 11
        }
      },
      '90': {
        start: {
          line: 198,
          column: 12
        },
        end: {
          line: 198,
          column: 55
        }
      },
      '91': {
        start: {
          line: 203,
          column: 6
        },
        end: {
          line: 203,
          column: 18
        }
      }
    },
    fnMap: {
      '0': {
        name: 'createHookObject',
        decl: {
          start: {
            line: 9,
            column: 36
          },
          end: {
            line: 9,
            column: 52
          }
        },
        loc: {
          start: {
            line: 9,
            column: 73
          },
          end: {
            line: 33,
            column: 1
          }
        },
        line: 9
      },
      '1': {
        name: '(anonymous_1)',
        decl: {
          start: {
            line: 30,
            column: 14
          },
          end: {
            line: 30,
            column: 15
          }
        },
        loc: {
          start: {
            line: 30,
            column: 22
          },
          end: {
            line: 30,
            column: 52
          }
        },
        line: 30
      },
      '2': {
        name: 'defaultMakeArguments',
        decl: {
          start: {
            line: 36,
            column: 40
          },
          end: {
            line: 36,
            column: 60
          }
        },
        loc: {
          start: {
            line: 36,
            column: 68
          },
          end: {
            line: 50,
            column: 1
          }
        },
        line: 36
      },
      '3': {
        name: 'makeArguments',
        decl: {
          start: {
            line: 54,
            column: 33
          },
          end: {
            line: 54,
            column: 46
          }
        },
        loc: {
          start: {
            line: 54,
            column: 54
          },
          end: {
            line: 69,
            column: 1
          }
        },
        line: 54
      },
      '4': {
        name: 'convertHookData',
        decl: {
          start: {
            line: 73,
            column: 35
          },
          end: {
            line: 73,
            column: 50
          }
        },
        loc: {
          start: {
            line: 73,
            column: 57
          },
          end: {
            line: 87,
            column: 1
          }
        },
        line: 73
      },
      '5': {
        name: '(anonymous_5)',
        decl: {
          start: {
            line: 81,
            column: 14
          },
          end: {
            line: 81,
            column: 15
          }
        },
        loc: {
          start: {
            line: 81,
            column: 36
          },
          end: {
            line: 83,
            column: 5
          }
        },
        line: 81
      },
      '6': {
        name: 'isHookObject',
        decl: {
          start: {
            line: 91,
            column: 32
          },
          end: {
            line: 91,
            column: 44
          }
        },
        loc: {
          start: {
            line: 91,
            column: 58
          },
          end: {
            line: 95,
            column: 1
          }
        },
        line: 91
      },
      '7': {
        name: 'getHooks',
        decl: {
          start: {
            line: 100,
            column: 28
          },
          end: {
            line: 100,
            column: 36
          }
        },
        loc: {
          start: {
            line: 100,
            column: 83
          },
          end: {
            line: 110,
            column: 1
          }
        },
        line: 100
      },
      '8': {
        name: 'processHooks',
        decl: {
          start: {
            line: 112,
            column: 32
          },
          end: {
            line: 112,
            column: 44
          }
        },
        loc: {
          start: {
            line: 112,
            column: 72
          },
          end: {
            line: 154,
            column: 1
          }
        },
        line: 112
      },
      '9': {
        name: '(anonymous_9)',
        decl: {
          start: {
            line: 114,
            column: 26
          },
          end: {
            line: 114,
            column: 27
          }
        },
        loc: {
          start: {
            line: 114,
            column: 37
          },
          end: {
            line: 130,
            column: 3
          }
        },
        line: 114
      },
      '10': {
        name: '(anonymous_10)',
        decl: {
          start: {
            line: 132,
            column: 31
          },
          end: {
            line: 132,
            column: 32
          }
        },
        loc: {
          start: {
            line: 132,
            column: 48
          },
          end: {
            line: 147,
            column: 3
          }
        },
        line: 132
      },
      '11': {
        name: '(anonymous_11)',
        decl: {
          start: {
            line: 136,
            column: 29
          },
          end: {
            line: 136,
            column: 30
          }
        },
        loc: {
          start: {
            line: 136,
            column: 43
          },
          end: {
            line: 140,
            column: 8
          }
        },
        line: 136
      },
      '12': {
        name: '(anonymous_12)',
        decl: {
          start: {
            line: 136,
            column: 84
          },
          end: {
            line: 136,
            column: 85
          }
        },
        loc: {
          start: {
            line: 136,
            column: 105
          },
          end: {
            line: 140,
            column: 7
          }
        },
        line: 136
      },
      '13': {
        name: '(anonymous_13)',
        decl: {
          start: {
            line: 137,
            column: 25
          },
          end: {
            line: 137,
            column: 26
          }
        },
        loc: {
          start: {
            line: 138,
            column: 10
          },
          end: {
            line: 138,
            column: 49
          }
        },
        line: 138
      },
      '14': {
        name: '(anonymous_14)',
        decl: {
          start: {
            line: 142,
            column: 29
          },
          end: {
            line: 142,
            column: 30
          }
        },
        loc: {
          start: {
            line: 142,
            column: 43
          },
          end: {
            line: 142,
            column: 88
          }
        },
        line: 142
      },
      '15': {
        name: '(anonymous_15)',
        decl: {
          start: {
            line: 149,
            column: 22
          },
          end: {
            line: 149,
            column: 23
          }
        },
        loc: {
          start: {
            line: 149,
            column: 28
          },
          end: {
            line: 149,
            column: 38
          }
        },
        line: 149
      },
      '16': {
        name: '(anonymous_16)',
        decl: {
          start: {
            line: 149,
            column: 46
          },
          end: {
            line: 149,
            column: 47
          }
        },
        loc: {
          start: {
            line: 149,
            column: 55
          },
          end: {
            line: 153,
            column: 3
          }
        },
        line: 149
      },
      '17': {
        name: 'enableHooks',
        decl: {
          start: {
            line: 157,
            column: 31
          },
          end: {
            line: 157,
            column: 42
          }
        },
        loc: {
          start: {
            line: 157,
            column: 65
          },
          end: {
            line: 206,
            column: 1
          }
        },
        line: 157
      },
      '18': {
        name: '(anonymous_18)',
        decl: {
          start: {
            line: 164,
            column: 16
          },
          end: {
            line: 164,
            column: 17
          }
        },
        loc: {
          start: {
            line: 164,
            column: 24
          },
          end: {
            line: 167,
            column: 3
          }
        },
        line: 164
      },
      '19': {
        name: '(anonymous_19)',
        decl: {
          start: {
            line: 176,
            column: 21
          },
          end: {
            line: 176,
            column: 22
          }
        },
        loc: {
          start: {
            line: 176,
            column: 36
          },
          end: {
            line: 201,
            column: 7
          }
        },
        line: 176
      },
      '20': {
        name: '(anonymous_20)',
        decl: {
          start: {
            line: 183,
            column: 20
          },
          end: {
            line: 183,
            column: 21
          }
        },
        loc: {
          start: {
            line: 183,
            column: 39
          },
          end: {
            line: 187,
            column: 9
          }
        },
        line: 183
      },
      '21': {
        name: '(anonymous_21)',
        decl: {
          start: {
            line: 189,
            column: 24
          },
          end: {
            line: 189,
            column: 25
          }
        },
        loc: {
          start: {
            line: 189,
            column: 34
          },
          end: {
            line: 200,
            column: 9
          }
        },
        line: 189
      }
    },
    branchMap: {
      '0': {
        loc: {
          start: {
            line: 9,
            column: 62
          },
          end: {
            line: 9,
            column: 71
          }
        },
        type: 'default-arg',
        locations: [{
          start: {
            line: 9,
            column: 69
          },
          end: {
            line: 9,
            column: 71
          }
        }],
        line: 9
      },
      '1': {
        loc: {
          start: {
            line: 25,
            column: 6
          },
          end: {
            line: 27,
            column: 7
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 25,
            column: 6
          },
          end: {
            line: 27,
            column: 7
          }
        }, {
          start: {
            line: 25,
            column: 6
          },
          end: {
            line: 27,
            column: 7
          }
        }],
        line: 25
      },
      '2': {
        loc: {
          start: {
            line: 25,
            column: 10
          },
          end: {
            line: 25,
            column: 43
          }
        },
        type: 'binary-expr',
        locations: [{
          start: {
            line: 25,
            column: 10
          },
          end: {
            line: 25,
            column: 18
          }
        }, {
          start: {
            line: 25,
            column: 22
          },
          end: {
            line: 25,
            column: 26
          }
        }, {
          start: {
            line: 25,
            column: 30
          },
          end: {
            line: 25,
            column: 43
          }
        }],
        line: 25
      },
      '3': {
        loc: {
          start: {
            line: 39,
            column: 2
          },
          end: {
            line: 41,
            column: 3
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 39,
            column: 2
          },
          end: {
            line: 41,
            column: 3
          }
        }, {
          start: {
            line: 39,
            column: 2
          },
          end: {
            line: 41,
            column: 3
          }
        }],
        line: 39
      },
      '4': {
        loc: {
          start: {
            line: 43,
            column: 2
          },
          end: {
            line: 45,
            column: 3
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 43,
            column: 2
          },
          end: {
            line: 45,
            column: 3
          }
        }, {
          start: {
            line: 43,
            column: 2
          },
          end: {
            line: 45,
            column: 3
          }
        }],
        line: 43
      },
      '5': {
        loc: {
          start: {
            line: 47,
            column: 14
          },
          end: {
            line: 47,
            column: 31
          }
        },
        type: 'binary-expr',
        locations: [{
          start: {
            line: 47,
            column: 14
          },
          end: {
            line: 47,
            column: 25
          }
        }, {
          start: {
            line: 47,
            column: 29
          },
          end: {
            line: 47,
            column: 31
          }
        }],
        line: 47
      },
      '6': {
        loc: {
          start: {
            line: 55,
            column: 2
          },
          end: {
            line: 66,
            column: 3
          }
        },
        type: 'switch',
        locations: [{
          start: {
            line: 56,
            column: 4
          },
          end: {
            line: 57,
            column: 29
          }
        }, {
          start: {
            line: 58,
            column: 4
          },
          end: {
            line: 58,
            column: 15
          }
        }, {
          start: {
            line: 59,
            column: 4
          },
          end: {
            line: 60,
            column: 38
          }
        }, {
          start: {
            line: 61,
            column: 4
          },
          end: {
            line: 61,
            column: 18
          }
        }, {
          start: {
            line: 62,
            column: 4
          },
          end: {
            line: 63,
            column: 49
          }
        }, {
          start: {
            line: 64,
            column: 4
          },
          end: {
            line: 65,
            column: 40
          }
        }],
        line: 55
      },
      '7': {
        loc: {
          start: {
            line: 76,
            column: 2
          },
          end: {
            line: 84,
            column: 3
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 76,
            column: 2
          },
          end: {
            line: 84,
            column: 3
          }
        }, {
          start: {
            line: 76,
            column: 2
          },
          end: {
            line: 84,
            column: 3
          }
        }],
        line: 76
      },
      '8': {
        loc: {
          start: {
            line: 78,
            column: 9
          },
          end: {
            line: 84,
            column: 3
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 78,
            column: 9
          },
          end: {
            line: 84,
            column: 3
          }
        }, {
          start: {
            line: 78,
            column: 9
          },
          end: {
            line: 84,
            column: 3
          }
        }],
        line: 78
      },
      '9': {
        loc: {
          start: {
            line: 82,
            column: 18
          },
          end: {
            line: 82,
            column: 59
          }
        },
        type: 'cond-expr',
        locations: [{
          start: {
            line: 82,
            column: 42
          },
          end: {
            line: 82,
            column: 51
          }
        }, {
          start: {
            line: 82,
            column: 54
          },
          end: {
            line: 82,
            column: 59
          }
        }],
        line: 82
      },
      '10': {
        loc: {
          start: {
            line: 92,
            column: 9
          },
          end: {
            line: 94,
            column: 39
          }
        },
        type: 'binary-expr',
        locations: [{
          start: {
            line: 92,
            column: 9
          },
          end: {
            line: 92,
            column: 39
          }
        }, {
          start: {
            line: 93,
            column: 4
          },
          end: {
            line: 93,
            column: 41
          }
        }, {
          start: {
            line: 94,
            column: 4
          },
          end: {
            line: 94,
            column: 39
          }
        }],
        line: 92
      },
      '11': {
        loc: {
          start: {
            line: 100,
            column: 66
          },
          end: {
            line: 100,
            column: 81
          }
        },
        type: 'default-arg',
        locations: [{
          start: {
            line: 100,
            column: 76
          },
          end: {
            line: 100,
            column: 81
          }
        }],
        line: 100
      },
      '12': {
        loc: {
          start: {
            line: 101,
            column: 19
          },
          end: {
            line: 101,
            column: 50
          }
        },
        type: 'binary-expr',
        locations: [{
          start: {
            line: 101,
            column: 19
          },
          end: {
            line: 101,
            column: 44
          }
        }, {
          start: {
            line: 101,
            column: 48
          },
          end: {
            line: 101,
            column: 50
          }
        }],
        line: 101
      },
      '13': {
        loc: {
          start: {
            line: 102,
            column: 23
          },
          end: {
            line: 102,
            column: 58
          }
        },
        type: 'binary-expr',
        locations: [{
          start: {
            line: 102,
            column: 23
          },
          end: {
            line: 102,
            column: 52
          }
        }, {
          start: {
            line: 102,
            column: 56
          },
          end: {
            line: 102,
            column: 58
          }
        }],
        line: 102
      },
      '14': {
        loc: {
          start: {
            line: 104,
            column: 2
          },
          end: {
            line: 107,
            column: 3
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 104,
            column: 2
          },
          end: {
            line: 107,
            column: 3
          }
        }, {
          start: {
            line: 104,
            column: 2
          },
          end: {
            line: 107,
            column: 3
          }
        }],
        line: 104
      },
      '15': {
        loc: {
          start: {
            line: 117,
            column: 4
          },
          end: {
            line: 127,
            column: 5
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 117,
            column: 4
          },
          end: {
            line: 127,
            column: 5
          }
        }, {
          start: {
            line: 117,
            column: 4
          },
          end: {
            line: 127,
            column: 5
          }
        }],
        line: 117
      },
      '16': {
        loc: {
          start: {
            line: 118,
            column: 6
          },
          end: {
            line: 120,
            column: 7
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 118,
            column: 6
          },
          end: {
            line: 120,
            column: 7
          }
        }, {
          start: {
            line: 118,
            column: 6
          },
          end: {
            line: 120,
            column: 7
          }
        }],
        line: 118
      },
      '17': {
        loc: {
          start: {
            line: 122,
            column: 6
          },
          end: {
            line: 124,
            column: 7
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 122,
            column: 6
          },
          end: {
            line: 124,
            column: 7
          }
        }, {
          start: {
            line: 122,
            column: 6
          },
          end: {
            line: 124,
            column: 7
          }
        }],
        line: 122
      },
      '18': {
        loc: {
          start: {
            line: 135,
            column: 4
          },
          end: {
            line: 143,
            column: 5
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 135,
            column: 4
          },
          end: {
            line: 143,
            column: 5
          }
        }, {
          start: {
            line: 135,
            column: 4
          },
          end: {
            line: 143,
            column: 5
          }
        }],
        line: 135
      },
      '19': {
        loc: {
          start: {
            line: 136,
            column: 43
          },
          end: {
            line: 140,
            column: 8
          }
        },
        type: 'cond-expr',
        locations: [{
          start: {
            line: 136,
            column: 65
          },
          end: {
            line: 136,
            column: 69
          }
        }, {
          start: {
            line: 136,
            column: 72
          },
          end: {
            line: 140,
            column: 8
          }
        }],
        line: 136
      },
      '20': {
        loc: {
          start: {
            line: 138,
            column: 10
          },
          end: {
            line: 138,
            column: 49
          }
        },
        type: 'cond-expr',
        locations: [{
          start: {
            line: 138,
            column: 18
          },
          end: {
            line: 138,
            column: 31
          }
        }, {
          start: {
            line: 138,
            column: 34
          },
          end: {
            line: 138,
            column: 49
          }
        }],
        line: 138
      },
      '21': {
        loc: {
          start: {
            line: 142,
            column: 43
          },
          end: {
            line: 142,
            column: 88
          }
        },
        type: 'cond-expr',
        locations: [{
          start: {
            line: 142,
            column: 65
          },
          end: {
            line: 142,
            column: 69
          }
        }, {
          start: {
            line: 142,
            column: 72
          },
          end: {
            line: 142,
            column: 88
          }
        }],
        line: 142
      },
      '22': {
        loc: {
          start: {
            line: 158,
            column: 2
          },
          end: {
            line: 160,
            column: 3
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 158,
            column: 2
          },
          end: {
            line: 160,
            column: 3
          }
        }, {
          start: {
            line: 158,
            column: 2
          },
          end: {
            line: 160,
            column: 3
          }
        }],
        line: 158
      },
      '23': {
        loc: {
          start: {
            line: 177,
            column: 8
          },
          end: {
            line: 179,
            column: 9
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 177,
            column: 8
          },
          end: {
            line: 179,
            column: 9
          }
        }, {
          start: {
            line: 177,
            column: 8
          },
          end: {
            line: 179,
            column: 9
          }
        }],
        line: 177
      },
      '24': {
        loc: {
          start: {
            line: 184,
            column: 10
          },
          end: {
            line: 186,
            column: 11
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 184,
            column: 10
          },
          end: {
            line: 186,
            column: 11
          }
        }, {
          start: {
            line: 184,
            column: 10
          },
          end: {
            line: 186,
            column: 11
          }
        }],
        line: 184
      },
      '25': {
        loc: {
          start: {
            line: 184,
            column: 14
          },
          end: {
            line: 184,
            column: 64
          }
        },
        type: 'binary-expr',
        locations: [{
          start: {
            line: 184,
            column: 14
          },
          end: {
            line: 184,
            column: 30
          }
        }, {
          start: {
            line: 184,
            column: 34
          },
          end: {
            line: 184,
            column: 64
          }
        }],
        line: 184
      },
      '26': {
        loc: {
          start: {
            line: 190,
            column: 26
          },
          end: {
            line: 191,
            column: 45
          }
        },
        type: 'binary-expr',
        locations: [{
          start: {
            line: 190,
            column: 26
          },
          end: {
            line: 190,
            column: 52
          }
        }, {
          start: {
            line: 191,
            column: 13
          },
          end: {
            line: 191,
            column: 44
          }
        }],
        line: 190
      },
      '27': {
        loc: {
          start: {
            line: 193,
            column: 10
          },
          end: {
            line: 195,
            column: 11
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 193,
            column: 10
          },
          end: {
            line: 195,
            column: 11
          }
        }, {
          start: {
            line: 193,
            column: 10
          },
          end: {
            line: 195,
            column: 11
          }
        }],
        line: 193
      },
      '28': {
        loc: {
          start: {
            line: 197,
            column: 10
          },
          end: {
            line: 199,
            column: 11
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 197,
            column: 10
          },
          end: {
            line: 199,
            column: 11
          }
        }, {
          start: {
            line: 197,
            column: 10
          },
          end: {
            line: 199,
            column: 11
          }
        }],
        line: 197
      }
    },
    s: {
      '0': 0,
      '1': 0,
      '2': 0,
      '3': 0,
      '4': 0,
      '5': 0,
      '6': 0,
      '7': 0,
      '8': 0,
      '9': 0,
      '10': 0,
      '11': 0,
      '12': 0,
      '13': 0,
      '14': 0,
      '15': 0,
      '16': 0,
      '17': 0,
      '18': 0,
      '19': 0,
      '20': 0,
      '21': 0,
      '22': 0,
      '23': 0,
      '24': 0,
      '25': 0,
      '26': 0,
      '27': 0,
      '28': 0,
      '29': 0,
      '30': 0,
      '31': 0,
      '32': 0,
      '33': 0,
      '34': 0,
      '35': 0,
      '36': 0,
      '37': 0,
      '38': 0,
      '39': 0,
      '40': 0,
      '41': 0,
      '42': 0,
      '43': 0,
      '44': 0,
      '45': 0,
      '46': 0,
      '47': 0,
      '48': 0,
      '49': 0,
      '50': 0,
      '51': 0,
      '52': 0,
      '53': 0,
      '54': 0,
      '55': 0,
      '56': 0,
      '57': 0,
      '58': 0,
      '59': 0,
      '60': 0,
      '61': 0,
      '62': 0,
      '63': 0,
      '64': 0,
      '65': 0,
      '66': 0,
      '67': 0,
      '68': 0,
      '69': 0,
      '70': 0,
      '71': 0,
      '72': 0,
      '73': 0,
      '74': 0,
      '75': 0,
      '76': 0,
      '77': 0,
      '78': 0,
      '79': 0,
      '80': 0,
      '81': 0,
      '82': 0,
      '83': 0,
      '84': 0,
      '85': 0,
      '86': 0,
      '87': 0,
      '88': 0,
      '89': 0,
      '90': 0,
      '91': 0
    },
    f: {
      '0': 0,
      '1': 0,
      '2': 0,
      '3': 0,
      '4': 0,
      '5': 0,
      '6': 0,
      '7': 0,
      '8': 0,
      '9': 0,
      '10': 0,
      '11': 0,
      '12': 0,
      '13': 0,
      '14': 0,
      '15': 0,
      '16': 0,
      '17': 0,
      '18': 0,
      '19': 0,
      '20': 0,
      '21': 0
    },
    b: {
      '0': [0],
      '1': [0, 0],
      '2': [0, 0, 0],
      '3': [0, 0],
      '4': [0, 0],
      '5': [0, 0],
      '6': [0, 0, 0, 0, 0, 0],
      '7': [0, 0],
      '8': [0, 0],
      '9': [0, 0],
      '10': [0, 0, 0],
      '11': [0],
      '12': [0, 0],
      '13': [0, 0],
      '14': [0, 0],
      '15': [0, 0],
      '16': [0, 0],
      '17': [0, 0],
      '18': [0, 0],
      '19': [0, 0],
      '20': [0, 0],
      '21': [0, 0],
      '22': [0, 0],
      '23': [0, 0],
      '24': [0, 0],
      '25': [0, 0],
      '26': [0, 0],
      '27': [0, 0],
      '28': [0, 0]
    },
    _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'
  },
      coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  coverageData.hash = hash;
  return coverage[path] = coverageData;
}();

const { _: { each, pick }, createSymbol } = (cov_2rhh3f696k.s[0]++, require('/@feathersjs/commons$4.0.0/lib/utils'/*'./utils'*/));

// To skip further hooks
const SKIP = (cov_2rhh3f696k.s[1]++, createSymbol('__feathersSkipHooks'));

cov_2rhh3f696k.s[2]++;
exports.SKIP = SKIP;
cov_2rhh3f696k.s[3]++;
exports.ACTIVATE_HOOKS = createSymbol('__feathersActivateHooks');

cov_2rhh3f696k.s[4]++;
exports.createHookObject = function createHookObject(method, data = (cov_2rhh3f696k.b[0][0]++, {})) {
  cov_2rhh3f696k.f[0]++;

  const hook = (cov_2rhh3f696k.s[5]++, {});

  cov_2rhh3f696k.s[6]++;
  Object.defineProperty(hook, 'toJSON', {
    value() {
      cov_2rhh3f696k.s[7]++;

      return pick(this, 'type', 'method', 'path', 'params', 'id', 'data', 'result', 'error');
    }
  });

  cov_2rhh3f696k.s[8]++;
  return Object.assign(hook, data, {
    method,
    // A dynamic getter that returns the path of the service
    get path() {
      const { app, service } = (cov_2rhh3f696k.s[9]++, data);

      cov_2rhh3f696k.s[10]++;
      if ((cov_2rhh3f696k.b[2][0]++, !service) || (cov_2rhh3f696k.b[2][1]++, !app) || (cov_2rhh3f696k.b[2][2]++, !app.services)) {
        cov_2rhh3f696k.b[1][0]++;
        cov_2rhh3f696k.s[11]++;

        return null;
      } else {
        cov_2rhh3f696k.b[1][1]++;
      }

      cov_2rhh3f696k.s[12]++;
      return Object.keys(app.services).find(path => {
        cov_2rhh3f696k.f[1]++;
        cov_2rhh3f696k.s[13]++;
        return app.services[path] === service;
      });
    }
  });
};

// Fallback used by `makeArguments` which usually won't be used
cov_2rhh3f696k.s[14]++;
exports.defaultMakeArguments = function defaultMakeArguments(hook) {
  cov_2rhh3f696k.f[2]++;

  const result = (cov_2rhh3f696k.s[15]++, []);

  cov_2rhh3f696k.s[16]++;
  if (typeof hook.id !== 'undefined') {
    cov_2rhh3f696k.b[3][0]++;
    cov_2rhh3f696k.s[17]++;

    result.push(hook.id);
  } else {
    cov_2rhh3f696k.b[3][1]++;
  }

  cov_2rhh3f696k.s[18]++;
  if (hook.data) {
    cov_2rhh3f696k.b[4][0]++;
    cov_2rhh3f696k.s[19]++;

    result.push(hook.data);
  } else {
    cov_2rhh3f696k.b[4][1]++;
  }

  cov_2rhh3f696k.s[20]++;
  result.push((cov_2rhh3f696k.b[5][0]++, hook.params) || (cov_2rhh3f696k.b[5][1]++, {}));

  cov_2rhh3f696k.s[21]++;
  return result;
};

// Turns a hook object back into a list of arguments
// to call a service method with
cov_2rhh3f696k.s[22]++;
exports.makeArguments = function makeArguments(hook) {
  cov_2rhh3f696k.f[3]++;
  cov_2rhh3f696k.s[23]++;

  switch (hook.method) {
    case 'find':
      cov_2rhh3f696k.b[6][0]++;
      cov_2rhh3f696k.s[24]++;

      return [hook.params];
    case 'get':
      cov_2rhh3f696k.b[6][1]++;

    case 'remove':
      cov_2rhh3f696k.b[6][2]++;
      cov_2rhh3f696k.s[25]++;

      return [hook.id, hook.params];
    case 'update':
      cov_2rhh3f696k.b[6][3]++;

    case 'patch':
      cov_2rhh3f696k.b[6][4]++;
      cov_2rhh3f696k.s[26]++;

      return [hook.id, hook.data, hook.params];
    case 'create':
      cov_2rhh3f696k.b[6][5]++;
      cov_2rhh3f696k.s[27]++;

      return [hook.data, hook.params];
  }

  cov_2rhh3f696k.s[28]++;
  return exports.defaultMakeArguments(hook);
};

// Converts different hook registration formats into the
// same internal format
cov_2rhh3f696k.s[29]++;
exports.convertHookData = function convertHookData(obj) {
  cov_2rhh3f696k.f[4]++;

  let hook = (cov_2rhh3f696k.s[30]++, {});

  cov_2rhh3f696k.s[31]++;
  if (Array.isArray(obj)) {
    cov_2rhh3f696k.b[7][0]++;
    cov_2rhh3f696k.s[32]++;

    hook = { all: obj };
  } else {
      cov_2rhh3f696k.b[7][1]++;
      cov_2rhh3f696k.s[33]++;
      if (typeof obj !== 'object') {
        cov_2rhh3f696k.b[8][0]++;
        cov_2rhh3f696k.s[34]++;

        hook = { all: [obj] };
      } else {
        cov_2rhh3f696k.b[8][1]++;
        cov_2rhh3f696k.s[35]++;

        each(obj, function (value, key) {
          cov_2rhh3f696k.f[5]++;
          cov_2rhh3f696k.s[36]++;

          hook[key] = !Array.isArray(value) ? (cov_2rhh3f696k.b[9][0]++, [value]) : (cov_2rhh3f696k.b[9][1]++, value);
        });
      }
    }cov_2rhh3f696k.s[37]++;
  return hook;
};

// Duck-checks a given object to be a hook object
// A valid hook object has `type` and `method`
cov_2rhh3f696k.s[38]++;
exports.isHookObject = function isHookObject(hookObject) {
  cov_2rhh3f696k.f[6]++;
  cov_2rhh3f696k.s[39]++;

  return (cov_2rhh3f696k.b[10][0]++, typeof hookObject === 'object') && (cov_2rhh3f696k.b[10][1]++, typeof hookObject.method === 'string') && (cov_2rhh3f696k.b[10][2]++, typeof hookObject.type === 'string');
};

// Returns all service and application hooks combined
// for a given method and type `appLast` sets if the hooks
// from `app` should be added last (or first by default)
cov_2rhh3f696k.s[40]++;
exports.getHooks = function getHooks(app, service, type, method, appLast = (cov_2rhh3f696k.b[11][0]++, false)) {
  cov_2rhh3f696k.f[7]++;

  const appHooks = (cov_2rhh3f696k.s[41]++, (cov_2rhh3f696k.b[12][0]++, app.__hooks[type][method]) || (cov_2rhh3f696k.b[12][1]++, []));
  const serviceHooks = (cov_2rhh3f696k.s[42]++, (cov_2rhh3f696k.b[13][0]++, service.__hooks[type][method]) || (cov_2rhh3f696k.b[13][1]++, []));

  cov_2rhh3f696k.s[43]++;
  if (appLast) {
    cov_2rhh3f696k.b[14][0]++;
    cov_2rhh3f696k.s[44]++;

    // Run hooks in the order of service -> app -> finally
    return serviceHooks.concat(appHooks);
  } else {
    cov_2rhh3f696k.b[14][1]++;
  }

  cov_2rhh3f696k.s[45]++;
  return appHooks.concat(serviceHooks);
};

cov_2rhh3f696k.s[46]++;
exports.processHooks = function processHooks(hooks, initialHookObject) {
  cov_2rhh3f696k.f[8]++;

  let hookObject = (cov_2rhh3f696k.s[47]++, initialHookObject);
  cov_2rhh3f696k.s[48]++;
  let updateCurrentHook = current => {
    cov_2rhh3f696k.f[9]++;
    cov_2rhh3f696k.s[49]++;

    // Either use the returned hook object or the current
    // hook object from the chain if the hook returned undefined
    if (current) {
      cov_2rhh3f696k.b[15][0]++;
      cov_2rhh3f696k.s[50]++;

      if (current === SKIP) {
        cov_2rhh3f696k.b[16][0]++;
        cov_2rhh3f696k.s[51]++;

        return SKIP;
      } else {
        cov_2rhh3f696k.b[16][1]++;
      }

      cov_2rhh3f696k.s[52]++;
      if (!exports.isHookObject(current)) {
        cov_2rhh3f696k.b[17][0]++;
        cov_2rhh3f696k.s[53]++;

        throw new Error(`${hookObject.type} hook for '${hookObject.method}' method returned invalid hook object`);
      } else {
        cov_2rhh3f696k.b[17][1]++;
      }

      cov_2rhh3f696k.s[54]++;
      hookObject = current;
    } else {
      cov_2rhh3f696k.b[15][1]++;
    }

    cov_2rhh3f696k.s[55]++;
    return hookObject;
  };
  // Go through all hooks and chain them into our promise
  const promise = (cov_2rhh3f696k.s[56]++, hooks.reduce((promise, fn) => {
    cov_2rhh3f696k.f[10]++;

    const hook = (cov_2rhh3f696k.s[57]++, fn.bind(this));

    cov_2rhh3f696k.s[58]++;
    if (hook.length === 2) {
      cov_2rhh3f696k.b[18][0]++;
      cov_2rhh3f696k.s[59]++;
      // function(hook, next)
      promise = promise.then(hookObject => {
        cov_2rhh3f696k.f[11]++;
        cov_2rhh3f696k.s[60]++;
        return hookObject === SKIP ? (cov_2rhh3f696k.b[19][0]++, SKIP) : (cov_2rhh3f696k.b[19][1]++, new Promise((resolve, reject) => {
          cov_2rhh3f696k.f[12]++;
          cov_2rhh3f696k.s[61]++;

          hook(hookObject, (error, result) => {
            cov_2rhh3f696k.f[13]++;
            cov_2rhh3f696k.s[62]++;
            return error ? (cov_2rhh3f696k.b[20][0]++, reject(error)) : (cov_2rhh3f696k.b[20][1]++, resolve(result));
          });
        }));
      });
    } else {
      cov_2rhh3f696k.b[18][1]++;
      cov_2rhh3f696k.s[63]++;
      // function(hook)
      promise = promise.then(hookObject => {
        cov_2rhh3f696k.f[14]++;
        cov_2rhh3f696k.s[64]++;
        return hookObject === SKIP ? (cov_2rhh3f696k.b[21][0]++, SKIP) : (cov_2rhh3f696k.b[21][1]++, hook(hookObject));
      });
    }

    // Use the returned hook object or the old one
    cov_2rhh3f696k.s[65]++;
    return promise.then(updateCurrentHook);
  }, Promise.resolve(hookObject)));

  cov_2rhh3f696k.s[66]++;
  return promise.then(() => {
    cov_2rhh3f696k.f[15]++;
    cov_2rhh3f696k.s[67]++;
    return hookObject;
  }).catch(error => {
    cov_2rhh3f696k.f[16]++;
    cov_2rhh3f696k.s[68]++;

    // Add the hook information to any errors
    error.hook = hookObject;
    cov_2rhh3f696k.s[69]++;
    throw error;
  });
};

// Add `.hooks` functionality to an object
cov_2rhh3f696k.s[70]++;
exports.enableHooks = function enableHooks(obj, methods, types) {
  cov_2rhh3f696k.f[17]++;
  cov_2rhh3f696k.s[71]++;

  if (typeof obj.hooks === 'function') {
    cov_2rhh3f696k.b[22][0]++;
    cov_2rhh3f696k.s[72]++;

    return obj;
  } else {
    cov_2rhh3f696k.b[22][1]++;
  }

  const __hooks = (cov_2rhh3f696k.s[73]++, {});

  cov_2rhh3f696k.s[74]++;
  types.forEach(type => {
    cov_2rhh3f696k.f[18]++;
    cov_2rhh3f696k.s[75]++;

    // Initialize properties where hook functions are stored
    __hooks[type] = {};
  });

  // Add non-enumerable `__hooks` property to the object
  cov_2rhh3f696k.s[76]++;
  Object.defineProperty(obj, '__hooks', {
    value: __hooks
  });

  cov_2rhh3f696k.s[77]++;
  return Object.assign(obj, {
    hooks(allHooks) {
      cov_2rhh3f696k.s[78]++;

      each(allHooks, (obj, type) => {
        cov_2rhh3f696k.f[19]++;
        cov_2rhh3f696k.s[79]++;

        if (!this.__hooks[type]) {
          cov_2rhh3f696k.b[23][0]++;
          cov_2rhh3f696k.s[80]++;

          throw new Error(`'${type}' is not a valid hook type`);
        } else {
          cov_2rhh3f696k.b[23][1]++;
        }

        const hooks = (cov_2rhh3f696k.s[81]++, exports.convertHookData(obj));

        cov_2rhh3f696k.s[82]++;
        each(hooks, (value, method) => {
          cov_2rhh3f696k.f[20]++;
          cov_2rhh3f696k.s[83]++;

          if ((cov_2rhh3f696k.b[25][0]++, method !== 'all') && (cov_2rhh3f696k.b[25][1]++, methods.indexOf(method) === -1)) {
            cov_2rhh3f696k.b[24][0]++;
            cov_2rhh3f696k.s[84]++;

            throw new Error(`'${method}' is not a valid hook method`);
          } else {
            cov_2rhh3f696k.b[24][1]++;
          }
        });

        cov_2rhh3f696k.s[85]++;
        methods.forEach(method => {
          cov_2rhh3f696k.f[21]++;

          const myHooks = (cov_2rhh3f696k.s[86]++, (cov_2rhh3f696k.b[26][0]++, this.__hooks[type][method]) || (cov_2rhh3f696k.b[26][1]++, this.__hooks[type][method] = []));

          cov_2rhh3f696k.s[87]++;
          if (hooks.all) {
            cov_2rhh3f696k.b[27][0]++;
            cov_2rhh3f696k.s[88]++;

            myHooks.push.apply(myHooks, hooks.all);
          } else {
            cov_2rhh3f696k.b[27][1]++;
          }

          cov_2rhh3f696k.s[89]++;
          if (hooks[method]) {
            cov_2rhh3f696k.b[28][0]++;
            cov_2rhh3f696k.s[90]++;

            myHooks.push.apply(myHooks, hooks[method]);
          } else {
            cov_2rhh3f696k.b[28][1]++;
          }
        });
      });

      cov_2rhh3f696k.s[91]++;
      return this;
    }
  });
};
});